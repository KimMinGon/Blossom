<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<interceptors>
		<interceptor>
			<mapping path="/chartjs.do" />
			<mapping path="/chartjs2.do" />
			<mapping path="/echarts.do" />
			<mapping path="/morisjs.do" />
			<mapping path="/other_charts.do" />
			<mapping path="/other_charts2.do" />
			<mapping path="/tables_dynamic.do" />
			<beans:bean class="interceptor.LoginCheckInterceptor"></beans:bean>
		</interceptor>
	</interceptors>

	<interceptors>
		<beans:bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<beans:property name="cacheSeconds" value="0" />
			<beans:property name="useExpiresHeader" value="true" />
			<beans:property name="useCacheControlHeader" value="true" />
			<beans:property name="useCacheControlNoStore" value="true" />
		</beans:bean>
	</interceptors>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="jsonView"
		class="net.sf.json.spring.web.servlet.view.JsonView"></beans:bean>
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"></beans:property>
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@59.10.147.53:1521:orcl" />
		<beans:property name="username" value="project2" />
		<beans:property name="password" value="project2" />
	</beans:bean>

	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="mapperLocations"
			value="classpath:com/exam/mybatis/mapper/*.xml"></beans:property>
	</beans:bean>

	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>

	<context:component-scan base-package="com.exam.blossom" />
	<context:component-scan base-package="com.exam.mybatis" />

</beans:beans>
